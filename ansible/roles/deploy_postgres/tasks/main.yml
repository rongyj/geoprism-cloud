
- name: Wait for postgres to be up
  wait_for: 'host="127.0.0.1" port={{ db_port | default(5432) }} delay=0 timeout=60 state=started'

- name: Drop DB
  postgresql_db:
    name: "{{item}}"
    state: absent
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
  with_items: 
    - "{{ apps | default([]) }}"
  when: "{{clean_db}}"
  
- name: Make DB
  postgresql_db:
    name: "{{item}}"
    state: present
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
  with_items: 
    - "{{ apps | default([]) }}"
  
- name: Drop User
  postgresql_user:
    name: "{{item}}"
    state: absent
    db: "{{item}}"
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
  with_items: 
    - "{{apps}}"
  when: "{{clean_db}}"
  
- name: Make User
  postgresql_user:
    name: "{{item}}"
    state: present
    db: "{{item}}"
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
    password: "{{db_pass}}"
    role_attr_flags: LOGIN,NOSUPERUSER
  with_items: 
    - "{{apps}}"
  when: "{{clean_db}}"
  
- name: DB Owner to new User
  postgresql_db:
    name: "{{item}}"
    state: present
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
    owner: "{{item}}"
  with_items: 
    - "{{ apps | default([]) }}"

- name: Add PostGIS
  postgresql_ext:
    name: postgis
    db: "{{item}}"
    state: present
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
  with_items: 
    - "{{apps}}"
    
- name: Add uuid-ossp
  postgresql_ext:
    name: uuid-ossp
    db: "{{item}}"
    state: present
    port: "{{ db_port | default(5432) }}"
    login_host: "127.0.0.1"
    login_user: "{{rootdb_user}}"
    login_password: "{{rootdb_pass}}"
  with_items: 
    - "{{apps}}"
    
#- name: restart postgresql container
#  docker_container:
#    name: postgres
#    state: started
#    restart: yes

#- replace:
#    path: /etc/hosts
#    regexp: '(\s+)old\.host\.name(\s+.*)?$'
#    replace: '\1new.host.name\2'
#    backup: yes