
# Deploy Solr Configset
- name: Delete Solr Config staging
  file:
    state: absent
    path: "{{app_data}}/solr/configsets"
  become: yes
  become_method: sudo
  when: "{{solr_enabled | default(false)}} and {{clean_solr | default(false)}}"
- name: Stage Solr Config
  copy: src="{{solr_core_path}}/"
        dest="{{app_data}}/solr/configsets"
  become: yes
  become_method: sudo
  when: "{{solr_enabled | default(false)}} and {{clean_solr | default(false)}}"
  
# Clean Solr Data
- name: Delete Solr Data
  file:
    state: absent
    path: "{{app_data}}/solr/mycores"
  become: yes
  become_method: sudo
  when: "{{solr_enabled | default(false)}} and {{clean_solr | default(false)}}"

# Solr Docker container
- name: Kill Solr
  shell: docker kill solr
  become: yes
  become_method: sudo
  ignore_errors: yes
  when: "{{solr_enabled | default(false)}} and {{clean_solr | default(false)}}"
- name: Start Solr
  community.general.docker_container:
    name: solr
    image: solr:6.6.5
    command: "solr-precreate {{solr_core_name}} /opt/solr/server/solr/configsets/{{solr_core_name}}"
    state: started
    recreate: "{{clean_solr}}"
    pull: yes
    restart_policy: always
    network_mode: host
    volumes:
      - "{{app_data}}/solr/configsets/{{solr_core_name}}:/opt/solr/server/solr/configsets/{{solr_core_name}}:ro"
      - "{{app_data}}/solr/mycores/{{solr_core_name}}/data:/data"
  become: yes
  become_method: sudo
  when: "{{solr_enabled | default(false)}} and {{clean_solr | default(false)}}"
  
- pause:
    seconds: 30
  when: "{{solr_enabled | default(false)}} and ({{clean_solr | default(false)}} or {{solr_volume_patch | default(false)}})"
  
- name: Mount Solr Data
  shell: docker exec --user root solr bash -c 'mv /opt/solr/server/solr/mycores/uasdm/data/* /data/ && rm -rf /opt/solr/server/solr/mycores/uasdm/data && ln -s /data /opt/solr/server/solr/mycores/uasdm/data && chown -R solr:solr /opt/solr/server/solr/mycores/uasdm/data && chown -R solr:solr /data'
  become: yes
  become_method: sudo
  when: "{{solr_enabled | default(false)}} and ({{clean_solr | default(false)}} or {{solr_volume_patch | default(false)}})"

# Third party libs
- name: Install libgdal
  shell: docker exec geoprism bash -c 'apt-get update && apt-get -y install libgdal-java'
  become: yes
  become_method: sudo
  when: "{{solr_enabled | default(false)}} and {{clean_solr | default(false)}}"
  
- name: Wait for Solr to be up
  wait_for: host="127.0.0.1" port=8983 delay=5 timeout=60 state=started
  when: "{{solr_enabled | default(false)}}"
  